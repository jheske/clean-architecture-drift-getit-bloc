-- CREATE TABLES

CREATE TABLE [user] (
    id INT NOT NULL PRIMARY KEY AUTOINCREMENT,
    username TEXT NOT NULL,
    favorite_song_name TEXT NOT NULL
) As UserTable;

CREATE TABLE [artist] (
    id INT NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    age INT NOT NULL,
    music_style TEXT NOT NULL,
    is_active INTEGER DEFAULT 0
) as ArtistTable;

CREATE TABLE [song] (
    id INT NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    duration INT,
    genre Text,
    album Text,
    artist_id INT NOT NULL REFERENCES artist(id) ON DELETE CASCADE
) as SongTable;

CREATE TABLE [playlist] (
    id INT NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    user_id INT NOT NULL REFERENCES user(id) ON DELETE CASCADE,
    CONSTRAINT unique_user_playlist UNIQUE (user_id)
) as PlaylistTable;

CREATE TABLE [playlistwithsongs] (
    id INT NOT NULL PRIMARY KEY AUTOINCREMENT,
    song_id INT NOT NULL REFERENCES song(id),
    playlist_id INT NOT NULL REFERENCES playlist(id),
    CONSTRAINT songIdWithPlaylistId UNIQUE (song_id, playlist_id)
) as PlaylistWithSongsTable;

--- READ/SELECT OPERATIONS

_getUsers:
    SELECT * FROM [user];

_getUserById:
    SELECT * FROM [user]
    WHERE id = :id
    LIMIT 1;

_getArtists:
    SELECT * FROM [artist];

_getArtistById:
    SELECT * FROM [artist]
    WHERE id = :id
    LIMIT 1;

_getSongs:
    SELECT * FROM [song];

_getSongById:
    SELECT * FROM [song]
    WHERE id = :id
    LIMIT 1;

_getPlaylistByUserId:
    SELECT * FROM [playlist]
    WHERE user_id = :userId
    LIMIT 1;

_getSongsInPlaylist:
   SELECT s.*, a.name AS artist_name
   FROM song AS s
   INNER JOIN playlistwithsongs AS ps ON ps.song_id = s.id
   INNER JOIN artist AS a ON a.id = s.artist_id
   WHERE ps.playlist_id = :playlistId;

_getSongsByArtist:
   SELECT s.*
   FROM song AS s
   INNER JOIN artist AS a ON a.id = s.artist_id
   WHERE a.id = :artistId;

_getSongsWithArtists:
    SELECT s.*, a.name AS artist_name
    FROM song AS s
    INNER JOIN artist AS a ON s.artist_id = a.id;

-- CREATE and UPDATE OPERATIONS

_insertUser:
    INSERT INTO [user] (username, favorite_song_name)
    VALUES (:username, :favorite_song_name);

_insertArtist:
    INSERT INTO [artist] (id, name, age, music_style, is_active)
    VALUES (:id, :name, :age, :music_style, :is_active);

_insertSong:
    INSERT INTO [song] (id, name, duration, genre, album, artist_id)
    VALUES (:id, :name, :duration, :genre, :album, :artist_id);

_insertPlaylist:
    INSERT INTO [playlist] (name, user_id)
    VALUES (:name, :user_id);

_insertPlaylistWithSongs:
    INSERT INTO [playlistwithsongs] (song_id, playlist_id)
    VALUES (:songId, :playlist_id);

-- DELETE OPERATIONS

